# sp22_qbio_public_data_analysis
This will hold the code for the QBIO spring 2022 data analysis group!
x = "hello"
# sp22_qbio_public_data_analysis
This will hold the code for the QBIO spring 2022 data analysis group!
x = "hello"
# sp22_qbio_public_data_analysis
This will hold the code for the QBIO spring 2022 data analysis group!
x = "hello"
y = "hi"
birthday = 09/28/2001
name = "Minwoo"
age = "20"
birthday = "09/28/2001"
name = "Minwoo"
age = "20"
birthday = "09/28/2001"
list_of_numbers = c(1, 3, 4, 8, 1, 44, -3, 29, -12)
min = "min(list_of_numbers)"
list_of_numbers = c(1, 3, 4, 8, 1, 44, -3, 29, -12)
min = min(list_of_numbers)
list_of_numbers = c(1, 3, 4, 8, 1, 44, -3, 29, -12)
min = min(list_of_numbers)
max = max(list_of_numbers)
print (min)
# exercise 1.1
load("attenu")
data("attenu")
# exercise 1.1
data("attenu")
# exercise 1.1
data <- data("attenu")
head(attenu)
# exercise 1.1
data("attenu")
force(attenu)
is.na(attenu$station)
na_rows <- is.na(attenu$station)
attenu_cleaned <- attenu[na_rows==FALSE, ]
View(attenu_cleaned)
dim(attenu_cleaned)
# exercise 1.2
Theoph_2 <- data("Theoph")
force(Theoph)
Theoph_2 <- data("Theoph")
Theoph_2 <- Theoph
str(Theoph_2)
median(Theoph_2$Dose)
# median = 4.53
Theoph_2$Dose_Class <- ifelse(Dose>=4.53, "high", "low")
# median = 4.53
Theoph_2$Dose_Class <- ifelse(Theoph2$Dose>=4.53, "high", "low")
# median = 4.53
Theoph_2$Dose_Class <- ifelse(Theoph_2$Dose>=4.53, "high", "low")
View(Theoph_2)
dim(Theoph_2)
library(readr)
starbucks <- read_csv("Desktop/qbio_data_analysis_minwooc/week3_R/week3_homework/starbucks.csv")
View(starbucks)
is_row_empty <- is.na(starbucks$Drink)
?is.na
is.na(starbucks)
is_row_empty <- is.na(starbucks)
rowSums(is_row_empty)
# Need 6 na to contain no data
no_data <- ifelse(rowSums(is_row_empty)==6, TRUE, FALSE)
# Need 6 na to contain no data
is_row_empty <- ifelse(rowSums(is_row_empty)==6, TRUE, FALSE)
dim(starbucks)
length(is_row_empty)
nrow(starbucks)
# both 177
starbucks_cleaned <- starbucks[is_row_empty==FALSE, ]
plot(Carb, Calories, xlab="Carbohydrates(g)")
plot(starbucks$Carb, Calories, xlab="Carbohydrates(g)")
plot(starbucks$Carb, starbucks$Calories, xlab="Carbohydrates(g)")
plot(starbucks$Carb, starbucks$Calories, xlab="Carbohydrates(g)", ylab="Calories")
max(starbucks$Calories)
max(starbucks_cleaned$Calories)
highcal <- starbucks_cleaned$Calories==430
starbucks_cleaned[highcal,]
which(highcal==TRUE)
which(highcal==TRUE)
starbucks_cleaned[65, Drink]
starbucks_cleaned[65, starbucks_cleaned$Drink]
View(starbucks_cleaned)
starbucks_cleaned[65, "Drink"]
# Starbucks Signature Hot Chocolate
is_highest_fat <- ifelse(starbucks_cleaned$Calories==430, TRUE, FALSE)
# Starbucks Signature Hot Chocolate
is_highest_fat <- ifelse(highcal, TRUE, FALSE)
# Starbucks Signature Hot Chocolate
max(starbucks_cleaned$Fat)
# Starbucks Signature Hot Chocolate
max(starbucks_cleaned$Fat)
starbucks_cleaned$is_highest_fat <- ifelse(starbucks_cleaned$Fat==26, TRUE, FALSE)
View(starbucks_cleaned)
plot(starbucks_cleaned$Carb, starbucks_cleaned$Calories, xlab="Carbohydrates(g)", ylab="Calories",
col=starbucks_cleaned$is_highest_fat)
plot(starbucks_cleaned$Carb, starbucks_cleaned$Calories, xlab="Carbohydrates(g)", ylab="Calories")
plot(starbucks_cleaned$Carb, starbucks_cleaned$Calories, xlab="Carbohydrates(g)", ylab="Calories",
col=starbucks_cleaned$is_highest_fat)
?plot
plot(starbucks_cleaned$Carb, starbucks_cleaned$Calories, xlab="Carbohydrates(g)", ylab="Calories",
col=as.factor(starbucks_cleaned$is_highest_fat))
library(readr)
Batting <- read_csv("Desktop/qbio_data_analysis_minwooc/week3_R/week3_homework/Batting.csv")
View(Batting)
goodplayers <- ifelse(Batting$HR>=3, TRUE, FALSE)
Batting$goodplayers <- ifelse(Batting$HR>=3, TRUE, FALSE)
colSums(Batting$goodplayers)
View(Batting)
?colSums
sum(Batting$goodplayers)
dim(Batting)
sum(Batting$goodplayers)
# 26155 players with >3 homeruns
homeruns <- plot(Batting$yearID, Batting$HR)
# 26155 players with >3 homeruns
homeruns <- plot(Batting$yearID, Batting$HR, xlab=Year, ylab=, Homerunes)
# 26155 players with >3 homeruns
homeruns <- plot(Batting$yearID, Batting$HR, xlab="Year", ylab= "Homerunes")
angels <- ifelse(Batting$teamID="LAA", TRUE, FALSE)
angels <- ifelse(Batting$teamID=="LAA", TRUE, FALSE)
angels <- Batting[angels,]
View(angels)
sum(angels$goodplayers)
# 259 players with >3 homeruns
teams <- ifelse(Batting$teamID=="ATL"|Batting$teamID=="PIT")
# 259 players with >3 homeruns
teams <- ifelse(Batting$teamID=="ATL"|Batting$teamID=="PIT", TRUE, FALSE)
teams <- Batting[teams,]
View(teams)
plot(teams$playerID, teams$HR, xlab="Players", ylab="Homerunes")
plot(teams$playerID, teams$HR, xlab="Players", ylab="Homerunes",
col=teams$playerID)
na_homeruns <- is.na(teams$HR)
teams <- teams[na_homeruns==FALSE, ]
plot(teams$playerID, teams$HR, xlab="Players", ylab="Homeruns",
col=teams$playerID)
plot(as.factor(teams$playerID), teams$HR, xlab="Players", ylab="Homeruns",
col=teams$playerID)
plot(teams$yearID, teams$HR, xlab="Players", ylab="Homeruns",
col=teams$playerID)
col=as.factor(teams$playerID)
plot(teams$yearID, teams$HR, xlab="Players", ylab="Homeruns",
col=as.factor(teams$playerID)
)
plot(teams$yearID, teams$HR, xlab="Players", ylab="Homeruns", col=teams$playerID)
plot(teams$yearID, teams$HR, xlab="Players", ylab="Homeruns")
plot(teams$yearID, teams$HR, xlab="Players", ylab="Homeruns", col=(teams$playerID))
plot(teams$yearID, teams$HR, xlab="Players", ylab="Homeruns", col=ifelse(teams$teamID=="ATL", "red", "black")
plot(teams$yearID, teams$HR, xlab="Players", ylab="Homeruns", col=ifelse(teams$teamID=="ATL", "red", "black")
)
plot(teams$yearID, teams$HR, xlab="Players", ylab="Homeruns", col=ifelse(teams$teamID=="ATL", "red", "black"))
BiocManager::install("TCGAbiolinks")
install.packages("BiocManager")
library(BiocManager)
BiocManager::install("TCGABiolinks")
library(TCGABiolinks)
BiocManager::install("TCGAbiolinks")
library(TCGAbiolinks)
setwd("/Users/minwoocho/Desktop/qbio_data_analysis_minwooc/Analysis/)
setwd("/Users/minwoocho/Desktop/qbio_data_analysis_minwooc/analysis_data/)
setwd("/Users/minwoocho/Desktop/qbio_data_analysis_minwooc/analysis_data/)
clin_query <- GDCquery(project = "TCGA-COAD", data.category = ..., file.type = "xml")
setwd("/Users/minwoocho/Desktop/qbio_data_analysis_minwooc/analysis_data/)
setwd("/Users/minwoocho/Desktop/qbio_data_analysis_minwooc/analysis_data/)
clin_query <- GDCquery(project = "TCGA-COAD", data.category = ..., file.type = "xml")
setwd("/Users/minwoocho/Desktop/qbio_data_analysis_minwooc/analysis_data/)
clin_query <- GDCquery(project="TCGA-COAD", data.category=..., file.type="xml")
setwd("/Users/minwoocho/Desktop/qbio_data_analysis_minwooc/analysis_data/)
clin_query <- GDCquery(project="TCGA-COAD", data.category=..., file.type="xml")
setwd("/Users/minwoocho/Desktop/qbio_data_analysis_minwooc/analysis_data/)
setwd("/Users/minwoocho/Desktop/qbio_data_analysis_minwooc/analysis_data/)
GDCdownload(clin_query)
setwed("/Users/minwoocho/Desktop/qbio_data_analysis_minwooc/analysis_data/")
setwd("/Users/minwoocho/Desktop/qbio_data_analysis_minwooc/analysis_data/")
clin_query <- GDCquery(project = "TCGA-COAD", data.category = ..., file.type = "xml")
clin_query <- GDCquery(project = "TCGA-COAD", data.category = Clinical, file.type = "xml")
clin_query <- GDCquery(project = "TCGA-COAD", data.category = "Clinical", file.type = "xml")
GDCdownload(clin_query)
# Just adding an underscore between follow and up
names(clinic)[names(clinic)=="days_to_last_followup"] <- "days_to_last_follow_up"
#downloaded GDC
clinic <- GDCprepare_clinic(clin_query, clinical.info = "patient")
# Just adding an underscore between follow and up
names(clinic)[names(clinic)=="days_to_last_followup"] <- "days_to_last_follow_up"
